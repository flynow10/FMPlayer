generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model Song {
  // Id
  id String @id @default(uuid()) @db.Uuid

  // Metadata
  title     String   @db.VarChar(256)
  artists   Artist[] @relation("artistsSong")
  featuring Artist[] @relation("featuringSong")
  genre     String   @default("Unknown") @db.VarChar(64)

  // Album Info
  album       Album?  @relation(fields: [albumId], references: [id])
  albumId     String? @db.Uuid
  trackNumber Int     @default(1)

  // Timestamps
  modifiedOn DateTime @default(now()) @updatedAt
  createdOn  DateTime @default(now())

  // AWS Info
  audioUploaded DateTime?
}

model Artist {
  id               Int     @id @default(autoincrement())
  name             String  @unique @db.VarChar(64)
  artistOfSongs    Song[]  @relation("artistsSong")
  featuredOnSongs  Song[]  @relation("featuringSong")
  artistOfAlbums   Album[] @relation("artistsAlbum")
  featuredOnAlbums Album[] @relation("featuringAlbum")
}

model Album {
  // Id
  id String @id @default(uuid()) @db.Uuid

  // Metadata
  title     String   @db.VarChar(256)
  artists   Artist[] @relation("artistsAlbum")
  featuring Artist[] @relation("featuringAlbum")
  genre     String   @default("Unknown") @db.VarChar(64)

  // Song Info
  songs Song[]

  // Timestamps
  modifiedOn DateTime @default(now()) @updatedAt
  createdOn  DateTime @default(now())
}

model Playlist {
  // Id
  id String @id @default(uuid()) @db.Uuid

  // Metadata
  title String @db.VarChar(256)

  // Timestamps
  modifiedOn DateTime @default(now()) @updatedAt
  createdOn  DateTime @default(now()) @updatedAt
}
