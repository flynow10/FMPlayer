generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
  // url      = env("DEVELOPMENT_DB_URL")
}

model Song {
  // Id
  id String @id @default(uuid()) @db.Uuid

  // Metadata
  title     String   @db.VarChar(256)
  artists   String[] @default([]) @db.VarChar(64)
  featuring String[] @default([]) @db.VarChar(64)
  genre     String   @default("Unknown") @db.VarChar(64)

  // Album Info
  album       Album?  @relation(fields: [albumId], references: [id])
  albumId     String? @db.Uuid
  trackNumber Int     @default(1)

  // Timestamps
  modifiedOn DateTime @default(now()) @updatedAt
  createdOn  DateTime @default(now())
}

model Album {
  // Id
  id String @id @default(uuid()) @db.Uuid

  // Metadata
  title     String   @db.VarChar(256)
  artists   String[] @default([]) @db.VarChar(64)
  featuring String[] @default([]) @db.VarChar(64)
  genre     String   @default("Unknown") @db.VarChar(64)

  // Song Info
  songs Song[]

  // Timestamps
  modifiedOn DateTime @default(now()) @updatedAt
  createdOn  DateTime @default(now())
}

model Playlist {
  // Id
  id String @id @default(uuid()) @db.Uuid

  // Metadata
  title String @db.VarChar(256)

  // Timestamps
  modifiedOn DateTime @default(now()) @updatedAt
  createdOn  DateTime @default(now()) @updatedAt
}
